/**
 * generated by Xtext 2.34.0
 */
package org.xtext.mCC.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.mCC.MCCPackage;
import org.xtext.mCC.Mobile;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Mobile</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mCC.impl.MobileImpl#getBattery <em>Battery</em>}</li>
 *   <li>{@link org.xtext.mCC.impl.MobileImpl#getNetwork <em>Network</em>}</li>
 *   <li>{@link org.xtext.mCC.impl.MobileImpl#getMemory <em>Memory</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MobileImpl extends DeviceImpl implements Mobile
{
  /**
   * The default value of the '{@link #getBattery() <em>Battery</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBattery()
   * @generated
   * @ordered
   */
  protected static final int BATTERY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getBattery() <em>Battery</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBattery()
   * @generated
   * @ordered
   */
  protected int battery = BATTERY_EDEFAULT;

  /**
   * The default value of the '{@link #getNetwork() <em>Network</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetwork()
   * @generated
   * @ordered
   */
  protected static final int NETWORK_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNetwork() <em>Network</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetwork()
   * @generated
   * @ordered
   */
  protected int network = NETWORK_EDEFAULT;

  /**
   * The default value of the '{@link #getMemory() <em>Memory</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMemory()
   * @generated
   * @ordered
   */
  protected static final int MEMORY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMemory() <em>Memory</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMemory()
   * @generated
   * @ordered
   */
  protected int memory = MEMORY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MobileImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MCCPackage.Literals.MOBILE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getBattery()
  {
    return battery;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBattery(int newBattery)
  {
    int oldBattery = battery;
    battery = newBattery;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MCCPackage.MOBILE__BATTERY, oldBattery, battery));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNetwork()
  {
    return network;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNetwork(int newNetwork)
  {
    int oldNetwork = network;
    network = newNetwork;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MCCPackage.MOBILE__NETWORK, oldNetwork, network));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMemory()
  {
    return memory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMemory(int newMemory)
  {
    int oldMemory = memory;
    memory = newMemory;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MCCPackage.MOBILE__MEMORY, oldMemory, memory));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MCCPackage.MOBILE__BATTERY:
        return getBattery();
      case MCCPackage.MOBILE__NETWORK:
        return getNetwork();
      case MCCPackage.MOBILE__MEMORY:
        return getMemory();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MCCPackage.MOBILE__BATTERY:
        setBattery((Integer)newValue);
        return;
      case MCCPackage.MOBILE__NETWORK:
        setNetwork((Integer)newValue);
        return;
      case MCCPackage.MOBILE__MEMORY:
        setMemory((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MCCPackage.MOBILE__BATTERY:
        setBattery(BATTERY_EDEFAULT);
        return;
      case MCCPackage.MOBILE__NETWORK:
        setNetwork(NETWORK_EDEFAULT);
        return;
      case MCCPackage.MOBILE__MEMORY:
        setMemory(MEMORY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MCCPackage.MOBILE__BATTERY:
        return battery != BATTERY_EDEFAULT;
      case MCCPackage.MOBILE__NETWORK:
        return network != NETWORK_EDEFAULT;
      case MCCPackage.MOBILE__MEMORY:
        return memory != MEMORY_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (battery: ");
    result.append(battery);
    result.append(", network: ");
    result.append(network);
    result.append(", memory: ");
    result.append(memory);
    result.append(')');
    return result.toString();
  }

} //MobileImpl
