/*
 * generated by Xtext 2.34.0
 */
grammar InternalMCC;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.MCCGrammarAccess;

}

@parser::members {

 	private MCCGrammarAccess grammarAccess;

    public InternalMCCParser(TokenStream input, MCCGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MCCGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDevicesDeviceParserRuleCall_0_0());
				}
				lv_devices_0_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"devices",
						lv_devices_0_0,
						"org.xtext.MCC.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getApplicationsApplicationParserRuleCall_1_0());
				}
				lv_applications_1_0=ruleApplication
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"applications",
						lv_applications_1_0,
						"org.xtext.MCC.Application");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSystemsSystemParserRuleCall_2_0());
				}
				lv_systems_2_0=ruleSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"systems",
						lv_systems_2_0,
						"org.xtext.MCC.System");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getMobileParserRuleCall_0());
		}
		this_Mobile_0=ruleMobile
		{
			$current = $this_Mobile_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCloudParserRuleCall_1());
		}
		this_Cloud_1=ruleCloud
		{
			$current = $this_Cloud_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCloud
entryRuleCloud returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloudRule()); }
	iv_ruleCloud=ruleCloud
	{ $current=$iv_ruleCloud.current; }
	EOF;

// Rule Cloud
ruleCloud returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cloud'
		{
			newLeafNode(otherlv_0, grammarAccess.getCloudAccess().getCloudKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCloudAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCloudRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getCloudAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_cpuInstructions_3_0=RULE_INT
				{
					newLeafNode(lv_cpuInstructions_3_0, grammarAccess.getCloudAccess().getCpuInstructionsINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCloudRule());
					}
					setWithLastConsumed(
						$current,
						"cpuInstructions",
						lv_cpuInstructions_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getCloudAccess().getCommaKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCloudRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getCloudAccess().getApplicationsApplicationCrossReference_5_0());
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getCloudAccess().getRightSquareBracketKeyword_6());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getCloudAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleMobile
entryRuleMobile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMobileRule()); }
	iv_ruleMobile=ruleMobile
	{ $current=$iv_ruleMobile.current; }
	EOF;

// Rule Mobile
ruleMobile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mobile'
		{
			newLeafNode(otherlv_0, grammarAccess.getMobileAccess().getMobileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMobileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMobileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getMobileAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_cpuInstructions_3_0=RULE_INT
				{
					newLeafNode(lv_cpuInstructions_3_0, grammarAccess.getMobileAccess().getCpuInstructionsINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMobileRule());
					}
					setWithLastConsumed(
						$current,
						"cpuInstructions",
						lv_cpuInstructions_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getMobileAccess().getCommaKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMobileRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getMobileAccess().getApplicationsApplicationCrossReference_5_0());
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getMobileAccess().getCommaKeyword_6());
		}
		(
			(
				lv_battery_7_0=RULE_INT
				{
					newLeafNode(lv_battery_7_0, grammarAccess.getMobileAccess().getBatteryINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMobileRule());
					}
					setWithLastConsumed(
						$current,
						"battery",
						lv_battery_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getMobileAccess().getCommaKeyword_8());
		}
		(
			(
				lv_network_9_0=RULE_INT
				{
					newLeafNode(lv_network_9_0, grammarAccess.getMobileAccess().getNetworkINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMobileRule());
					}
					setWithLastConsumed(
						$current,
						"network",
						lv_network_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getMobileAccess().getCommaKeyword_10());
		}
		(
			(
				lv_memory_11_0=RULE_INT
				{
					newLeafNode(lv_memory_11_0, grammarAccess.getMobileAccess().getMemoryINTTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMobileRule());
					}
					setWithLastConsumed(
						$current,
						"memory",
						lv_memory_11_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getMobileAccess().getRightSquareBracketKeyword_12());
		}
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getMobileAccess().getSemicolonKeyword_13());
		}
	)
;

// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	iv_ruleApplication=ruleApplication
	{ $current=$iv_ruleApplication.current; }
	EOF;

// Rule Application
ruleApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Application'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationAccess().getApplicationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getApplicationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFragmentsFragmentParserRuleCall_3_0());
				}
				lv_fragments_3_0=ruleFragment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"fragments",
						lv_fragments_3_0,
						"org.xtext.MCC.Fragment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getStructureStructureParserRuleCall_4_0());
				}
				lv_structure_4_0=ruleStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					set(
						$current,
						"structure",
						lv_structure_4_0,
						"org.xtext.MCC.Structure");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getApplicationAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleStructure
entryRuleStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructureRule()); }
	iv_ruleStructure=ruleStructure
	{ $current=$iv_ruleStructure.current; }
	EOF;

// Rule Structure
ruleStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Structure'
		{
			newLeafNode(otherlv_0, grammarAccess.getStructureAccess().getStructureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStructureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getStructureAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStructureAccess().getEdgesEdgeParserRuleCall_3_0());
				}
				lv_edges_3_0=ruleEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructureRule());
					}
					add(
						$current,
						"edges",
						lv_edges_3_0,
						"org.xtext.MCC.Edge");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getStructureAccess().getRightSquareBracketKeyword_4());
		}
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructureAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleEdge
entryRuleEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEdgeRule()); }
	iv_ruleEdge=ruleEdge
	{ $current=$iv_ruleEdge.current; }
	EOF;

// Rule Edge
ruleEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEdgeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getEdgeAccess().getStartFragmentCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeAccess().getOperatorOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"org.xtext.MCC.Operator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEdgeRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEdgeAccess().getStopFragmentCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getEdgeAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEdgeRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEdgeAccess().getStopFragmentCrossReference_3_1_0());
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getEdgeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleFragment
entryRuleFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentRule()); }
	iv_ruleFragment=ruleFragment
	{ $current=$iv_ruleFragment.current; }
	EOF;

// Rule Fragment
ruleFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentAccess().getFragmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFragmentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getFragmentAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_instructions_3_0=RULE_INT
				{
					newLeafNode(lv_instructions_3_0, grammarAccess.getFragmentAccess().getInstructionsINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"instructions",
						lv_instructions_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getFragmentAccess().getCommaKeyword_4());
		}
		(
			(
				lv_memory_5_0=RULE_INT
				{
					newLeafNode(lv_memory_5_0, grammarAccess.getFragmentAccess().getMemoryINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"memory",
						lv_memory_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getFragmentAccess().getCommaKeyword_6());
		}
		(
			(
				lv_sync_7_0=RULE_INT
				{
					newLeafNode(lv_sync_7_0, grammarAccess.getFragmentAccess().getSyncINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentRule());
					}
					setWithLastConsumed(
						$current,
						"sync",
						lv_sync_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getFragmentAccess().getCommaKeyword_8());
		}
		(
			(
				(
					lv_isOfflodable_9_1='true'
					{
						newLeafNode(lv_isOfflodable_9_1, grammarAccess.getFragmentAccess().getIsOfflodableTrueKeyword_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFragmentRule());
						}
						setWithLastConsumed($current, "isOfflodable", lv_isOfflodable_9_1, null);
					}
					    |
					lv_isOfflodable_9_2='false'
					{
						newLeafNode(lv_isOfflodable_9_2, grammarAccess.getFragmentAccess().getIsOfflodableFalseKeyword_9_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFragmentRule());
						}
						setWithLastConsumed($current, "isOfflodable", lv_isOfflodable_9_2, null);
					}
				)
			)
		)
		otherlv_10=']'
		{
			newLeafNode(otherlv_10, grammarAccess.getFragmentAccess().getRightSquareBracketKeyword_10());
		}
		(
			(
				lv_init_11_0='init'
				{
					newLeafNode(lv_init_11_0, grammarAccess.getFragmentAccess().getInitInitKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentRule());
					}
					setWithLastConsumed($current, "init", lv_init_11_0, "init");
				}
			)
		)?
		otherlv_12=';'
		{
			newLeafNode(otherlv_12, grammarAccess.getFragmentAccess().getSemicolonKeyword_12());
		}
	)
;

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='System'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':='
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getColonEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSystemAccess().getDevicesDeviceCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4='|'
			{
				newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getVerticalLineKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSystemRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getSystemAccess().getDevicesDeviceCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getSystemAccess().getSemicolonKeyword_5());
		}
	)
;

// Rule Operator
ruleOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='-->'
			{
				$current = grammarAccess.getOperatorAccess().getNDCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getNDCEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='--|'
			{
				$current = grammarAccess.getOperatorAccess().getPAREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getPAREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='--::'
			{
				$current = grammarAccess.getOperatorAccess().getSEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperatorAccess().getSEQEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
