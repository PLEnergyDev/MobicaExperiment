grammar org.xtext.MCC with org.eclipse.xtext.common.Terminals

generate mCC "http://www.xtext.org/MCC"


Model:
	 (devices+=Device | applications+=Application | systems += System)*
;

Device:
	Mobile | Cloud
;

Cloud:
	'Cloud' name=ID '[' cpuInstructions=INT ',' applications+=[Application] ']'';'
;

Mobile:
	'Mobile' name=ID '[' cpuInstructions=INT ',' applications+=[Application] ',' battery=INT
		',' network=INT ',' memory=INT ']'
		';'
;

Application:
	'Application' name=ID '{' fragments+=Fragment+   structure=Structure '}'';'
;

Structure:
	'Structure' name=ID '[' 
		edges+=Edge+
	']'';'
;

Edge:
	start=[Fragment] operator=Operator stop+=[Fragment](',' stop+=[Fragment])*  ';'
//	start=[Fragment] operator=Operator stop=Expression  ';'
;


enum Operator:
	NDC = '-->' | PAR = '--|' | SEQ ='--::'
;



Fragment:
	'Fragment'  name=ID '[' instructions=INT ',' memory=INT ',' sync=INT ',' isOfflodable=('true'|'false') ']' (init='init')?';'
;


System:
	'System' name=ID ':=' devices+=[Device] ('|' devices+=[Device])* ';'
;

//Expression:
//Comma
//;
//
//Comma returns Expression:
//Parentesis (
//{Comma.left=current} op=(',')
//right=Parentesis
//)*
//;
//
//
//Parentesis returns Expression:
//	'(' ('-->' |  '--|' | '--::') Expression ')' | Atomic
//;
//
//Atomic returns Expression:
//	{FragmentVar} var=[Fragment]
//;



